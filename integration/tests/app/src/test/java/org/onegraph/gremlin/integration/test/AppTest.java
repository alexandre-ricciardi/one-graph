/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package org.onegraph.gremlin.integration.test;

import org.junit.Test;
import static org.junit.Assert.*;

import java.util.List;

import org.apache.tinkerpop.gremlin.driver.Cluster;
import org.apache.tinkerpop.gremlin.driver.remote.DriverRemoteConnection;
import org.apache.tinkerpop.gremlin.driver.ser.Serializers;
import org.apache.tinkerpop.gremlin.process.traversal.AnonymousTraversalSource;
import org.apache.tinkerpop.gremlin.process.traversal.dsl.graph.GraphTraversalSource;

public class AppTest {
    @Test public void testAppHasAGreeting() {
        App classUnderTest = new App();

        final Cluster cluster = Cluster.build("localhost")
        .port(8182)
        .maxInProcessPerConnection(32)
        .maxSimultaneousUsagePerConnection(32)
        .serializer(Serializers.GRAPHSON_V3D0)
        .create();
        try {
            final GraphTraversalSource g = AnonymousTraversalSource.traversal().withRemote(DriverRemoteConnection.using(cluster));
            List<Object> verticesWithNamePumba = g.V().has("name", "pumba").out("friendOf").id().toList();
            System.out.println(verticesWithNamePumba);
        } finally {
            cluster.close();
        }

        assertNotNull("app should shave a greeting", classUnderTest.getGreeting());
    }
}
